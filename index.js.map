{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["//3 функція вилучення(fetc анг.) карток та данних https://pixabay.com/ru/users/45653057/\nexport function fetchData(inputSearch) {\n \n    //метод створення параметрів за допомогою строки або метод створення параметрів\n    // const searchParams = `q=image&image_type=photo&orientation=horizontal&safesearch=true`;\nconst searchParams = new URLSearchParams({\n    key : \"25786434-348adb767e319176b4ad356ea\",\n    q: `${inputSearch}`,\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: true,\n});\n    return fetch(\n        `https://pixabay.com/api/?${searchParams}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    }); \n}","//4 функція для відображення зображень та данних\nexport function renderData(dataImgArr, userListEl) {\n     \n    // дефрагментація\n    const markup = dataImgArr.map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n    }) => {\n        return `<li class=\"gallery-list-item\">\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                    <img class=\"img\" src=\"${webformatURL}\" \n                        alt=\"${tags}\" \n                        title=\"${tags}\" />\n                    <ul class=\"data-list\">\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Likes</p>\n                            <p class=\"data-likes\">${likes}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Views</p>\n                            <p class=\"data-views\">${views}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Comments</p>\n                            <p class=\"data-comments\">${comments}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Downloads</p>\n                            <p class=\"data-downloads\">${downloads}</p>\n                        </li>\n                    </ul>\n                </a> \n          </li>`;\n    }).join(\"\");\n    \n    userListEl.insertAdjacentHTML(\"beforeend\", markup);\n}","// ключ що прриходить на https://pixabay.com\n\n//1.створення форми для пошуку та результуючого ul картинок\nconst bodySelect = document.querySelector(\"body\");\nconst firstHtml = \n`<div class=\"container\">\n    <form class=\"formFetchEl\">\n\t\t<input type=\"text\" class=\"search-input\" name=\"search\" />\n\t\t<button class=\"btnEl\">Search</button>\n    </form>\n    <span class=\"loader\">Loading</span>\n\t  <ul class=\"galleryEl\"></ul>\n</div>`;\n\nbodySelect.insertAdjacentHTML(\"afterbegin\", firstHtml)\n//0 завантажувач\nconst loader = document.querySelector(\".loader\");\n //0 прибирання з виду завантажувача\nloader.style.display = 'none';\n\n                    //імпорт бібліотек\n//iziToast ДЛЯ виведення повідомлень сайт https://www.npmjs.com/package/izitoast\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n//simplelightbox ДЛЯ відтворення великих картинок https://www.npmjs.com/package/simplelightbox\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nlet gallery = new SimpleLightbox('.galleryEl a', {\n                    caption: true,\n                    captionDelay: 250,\n                    captionsData: 'alt',\n                    });\n\n//імпорт з сусідніх файлів дж ес\nimport { fetchData } from './js/pixabay-api.js';\nimport { renderData } from './js/render-functions.js';\n\n//2 функія для отримання фото\nconst fetchUserForm = document.querySelector(\"form\");\nconst userList = document.querySelector(\".galleryEl\");\n// const fetchUserBtn = document.querySelector(\".btnEl\");\n\nfetchUserForm.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    //0 завантажувач видимий\n    loader.style.display = 'block';\n    const thisInputSearch = event.currentTarget.elements.search.value.toLowerCase().trim();\n    \n    if (!thisInputSearch) {\n        return\n    };\n\n    fetchData(thisInputSearch)\n        .then((comingsImg) => {\n            if (comingsImg.hits.length === 0) {\n                //попередження .......IZITOST.......\n                //alert(\"Sorry, there are no images matching your search query. Please try again!\");\n                 iziToast.show({\n                message: \"Sorry, there are no images matching your search query. Please try again!\",\n                messageColor: \"#000\",\n                messageSize: \"18px\",\n                messageLineHeight: \"20px\",\n                backgroundColor: \"rgb(255,153,102)\",\n                position: \"topRight\",              \n                 });\n                 // добавити скруглення для iziToast\n            const iziToastElStyle = document.querySelector(\".iziToast\");\n            iziToastElStyle.style.borderRadius = '10px';\n                iziToastElStyle.style.overflow = 'hidden';\n                 //0 прибирання з виду завантажувача\n        loader.style.display = 'none';\n            } else {\n                //очистка попереднього вмісту карток та створення нових \".galleryEl\"                \n                userList.innerHTML = '';\n\n                renderData(comingsImg.hits, userList);\n                 \n                   //метод для оновлення бібліотеки\n                gallery.refresh() \n                //0 прибирання з виду завантажувача\n                // loader.style.display = 'none';\n                \n// Перевірте завантаження всіх зображень\n            const images = userList.querySelectorAll('img');\n            let loadedImagesCount = 0;\n\n            images.forEach(img => {\n                if (img.complete) {\n                    loadedImagesCount++;\n                    if (loadedImagesCount === images.length) {\n                        // Сховати індикатор завантаження після завантаження всіх картинок\n                        loader.style.display = 'none';\n                    }\n                } else {\n                    img.addEventListener('load', () => {\n                        loadedImagesCount++;\n                        if (loadedImagesCount === images.length) {\n                            // Сховати індикатор завантаження після завантаження всіх картинок\n                            loader.style.display = 'none';\n                        }\n                    });\n                }\n            });\n\n            }\n        })\n        .catch((error) => {\n            console.log(error) \n            //попередження .......IZITOST.......\n                //alert(`Sorry, ${error}. Please try again!`);\n                 iziToast.show({\n                message: `Sorry, ${error}. Please try again!`,\n                messageColor: \"#000\",\n                messageSize: \"18px\",\n                messageLineHeight: \"20px\",\n                backgroundColor: \"rgb(255,153,102)\",\n                position: \"topRight\",              \n                 });\n                 // добавити скруглення для iziToast\n            const iziToastElStyle = document.querySelector(\".iziToast\");\n            iziToastElStyle.style.borderRadius = '10px';\n                iziToastElStyle.style.overflow = 'hidden';\n        }) \n        .finally(() => {\n\t  //0 прибирання з виду завантажувача\n        loader.style.display = 'none';\n\t});\n});\n"],"names":["fetchData","inputSearch","searchParams","response","renderData","dataImgArr","userListEl","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","bodySelect","firstHtml","loader","gallery","SimpleLightbox","fetchUserForm","userList","event","thisInputSearch","comingsImg","iziToast","iziToastElStyle","images","loadedImagesCount","img","error"],"mappings":"6vBACO,SAASA,EAAUC,EAAa,CAIvC,MAAMC,EAAe,IAAI,gBAAgB,CACrC,IAAM,qCACN,EAAG,GAAGD,CAAW,GACjB,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAC,EACG,OAAO,MACH,4BAA4BC,CAAY,EAChD,EAAM,KAAMC,GAAa,CACjB,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MACxB,CAAK,CACL,CCnBO,SAASC,EAAWC,EAAYC,EAAY,CAG/C,MAAMC,EAASF,EAAW,IAAI,CAAC,CAC3B,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,4CAC6BL,CAAa;AAAA,4CACbD,CAAY;AAAA,+BACzBE,CAAI;AAAA,iCACFA,CAAI;AAAA;AAAA;AAAA;AAAA,oDAIeC,CAAK;AAAA;AAAA;AAAA;AAAA,oDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,uDAIFC,CAAQ;AAAA;AAAA;AAAA;AAAA,wDAIPC,CAAS;AAAA;AAAA;AAAA;AAAA,gBAK5D,EAAE,KAAK,EAAE,EAEVR,EAAW,mBAAmB,YAAaC,CAAM,CACrD,CCtCA,MAAMQ,EAAa,SAAS,cAAc,MAAM,EAC1CC,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASAD,EAAW,mBAAmB,aAAcC,CAAS,EAErD,MAAMC,EAAS,SAAS,cAAc,SAAS,EAE/CA,EAAO,MAAM,QAAU,OASvB,IAAIC,EAAU,IAAIC,EAAe,eAAgB,CAC7B,QAAS,GACT,aAAc,IACd,aAAc,KAClC,CAAqB,EAOrB,MAAMC,EAAgB,SAAS,cAAc,MAAM,EAC7CC,EAAW,SAAS,cAAc,YAAY,EAGpDD,EAAc,iBAAiB,SAAWE,GAAU,CAChDA,EAAM,eAAc,EAEpBL,EAAO,MAAM,QAAU,QACvB,MAAMM,EAAkBD,EAAM,cAAc,SAAS,OAAO,MAAM,cAAc,OAE3EC,GAILvB,EAAUuB,CAAe,EACpB,KAAMC,GAAe,CAClB,GAAIA,EAAW,KAAK,SAAW,EAAG,CAG7BC,EAAS,KAAK,CACf,QAAS,2EACT,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,mBACjB,SAAU,UAC1B,CAAkB,EAEN,MAAMC,EAAkB,SAAS,cAAc,WAAW,EAC1DA,EAAgB,MAAM,aAAe,OACjCA,EAAgB,MAAM,SAAW,SAEzCT,EAAO,MAAM,QAAU,MAC/B,KAAmB,CAEHI,EAAS,UAAY,GAErBjB,EAAWoB,EAAW,KAAMH,CAAQ,EAGpCH,EAAQ,QAAS,EAKrB,MAAMS,EAASN,EAAS,iBAAiB,KAAK,EAC9C,IAAIO,EAAoB,EAExBD,EAAO,QAAQE,GAAO,CACdA,EAAI,UACJD,IACIA,IAAsBD,EAAO,SAE7BV,EAAO,MAAM,QAAU,SAG3BY,EAAI,iBAAiB,OAAQ,IAAM,CAC/BD,IACIA,IAAsBD,EAAO,SAE7BV,EAAO,MAAM,QAAU,OAEnD,CAAqB,CAErB,CAAa,CAEA,CACb,CAAS,EACA,MAAOa,GAAU,CACd,QAAQ,IAAIA,CAAK,EAGZL,EAAS,KAAK,CACf,QAAS,UAAUK,CAAK,sBACxB,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,mBACjB,SAAU,UAC1B,CAAkB,EAEN,MAAMJ,EAAkB,SAAS,cAAc,WAAW,EAC1DA,EAAgB,MAAM,aAAe,OACjCA,EAAgB,MAAM,SAAW,QACjD,CAAS,EACA,QAAQ,IAAM,CAEfT,EAAO,MAAM,QAAU,MAC/B,CAAE,CACF,CAAC"}